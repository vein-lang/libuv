name: CI-win

on:
  pull_request:
    paths:
      - '**'
      - '!docs/**'
      - '!src/unix/**'
      - '!.**'
      - '.github/workflows/CI-win.yml'
  push:
    branches:
      - v[0-9].*
      - master
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-${{ matrix.config.server }}
    name: build-${{ join(matrix.config.*, '-') }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {toolchain: Visual Studio 16 2019, arch: Win32, server: 2019}
          - {toolchain: Visual Studio 16 2019, arch: x64, server: 2019}
          - {toolchain: Visual Studio 17 2022, arch: Win32, server: 2022}
          - {toolchain: Visual Studio 17 2022, arch: x64, server: 2022}
          - {toolchain: Visual Studio 17 2022, arch: x64, server: 2022, config: ASAN}
          - {toolchain: Visual Studio 17 2022, arch: x64, server: 2022, config: UBSAN}
          - {toolchain: Visual Studio 17 2022, arch: arm64, server: 2022}
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run:
          cmake -S . -B build -DBUILD_TESTING=ON
            -G "${{ matrix.config.toolchain }}" -A ${{ matrix.config.arch }}
            ${{ matrix.config.config == 'ASAN' && '-DASAN=on -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded' ||
                matrix.config.config == 'UBSAN' && '-DUBSAN=on' || '' }}

          cmake --build build --config RelWithDebInfo

          ${{ matrix.config.config == 'ASAN' && 'Copy-Item -Path "build\\*.exe" -Destination "build\\RelWithDebInfo\\"' || '' }}

          ${{ matrix.config.config == 'ASAN' && 'Copy-Item -Path "build\\*.dll" -Destination "build\\RelWithDebInfo\\"' || '' }}

          ls -l build
          
          ls -l build\\RelWithDebInfo
      - name: platform_output_a
        if: ${{ matrix.config.arch != 'arm64' }}
        shell: cmd
        run:
          build\\RelWithDebInfo\\uv_run_tests_a.exe platform_output
      - name: platform_output
        if: ${{ matrix.config.arch != 'arm64' }}
        shell: cmd
        run:
          build\\RelWithDebInfo\\uv_run_tests.exe platform_output
      - name: Test
        # only valid with libuv-master with the fix for
        # https://github.com/libuv/leps/blob/master/005-windows-handles-not-fd.md
        if: ${{ matrix.config.config != 'ASAN' && matrix.config.arch != 'arm64' }}
        shell: cmd
        run:
          cd build

          ctest -C RelWithDebInfo -V
      - name: Test only static
        if: ${{ matrix.config.config == 'ASAN' && matrix.config.arch != 'arm64' }}
        shell: cmd
        run:
          build\\RelWithDebInfo\\uv_run_tests_a.exe
      - name: Upload artifacts
        uses: actions/upload-artifact@v4.3.3
        with:
          name: ${{ matrix.arch }}-${{ matrix.server }}-${{ matrix.config }}-build
          path: build
          if-no-files-found: error
